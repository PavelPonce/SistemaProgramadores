CREATE SCHEMA Acade
GO
CREATE SCHEMA Calif
GO
CREATE TABLE Acade.tbCursos(
	Curso_Id INT IDENTITY,
	Curso_Nombre VARCHAR(30) UNIQUE NOT NULL,
	CONSTRAINT PK_tbCursos_Curso_Id PRIMARY KEY(Curso_Id)
);
CREATE TABLE Acade.tbGeneraciones(
	Gener_Id INT IDENTITY,
	Gener_Nombre VARCHAR(30) UNIQUE NOT NULL,
	Gener_Anhio INT UNIQUE NOT NULL,
	CONSTRAINT PK_tbGeneraciones_Gener_Id PRIMARY KEY(Gener_Id),
	CONSTRAINT CK_tbGeneraciones_Gener_Anhio CHECK(Gener_Anhio >= 1900)
);
CREATE TABLE Acade.tbCursosXgeneracion(
	CuGen_Id INT IDENTITY,
	Curso_Id INT NOT NULL,
	Gener_Id INT NOT NULL,
	CONSTRAINT PK_tbCursosXgeneracion_CuGen_Id PRIMARY KEY(CuGen_Id),
	CONSTRAINT FK_tbCursosXgeneracion_tbGeneraciones_Gener_Id FOREIGN KEY(Gener_Id) REFERENCES Acade.tbGeneraciones(Gener_Id),
	CONSTRAINT FK_tbCursosXgeneracion_tbCursos_Curso_Id FOREIGN KEY(Curso_Id) REFERENCES Acade.tbCursos(Curso_Id)
);
CREATE TABLE Calif.tbActividades(
	Activ_Id INT IDENTITY,
	Activ_Nombre VARCHAR(30) UNIQUE NOT NULL,
	CONSTRAINT PK_tbActividades_Activ_Id PRIMARY KEY(Activ_Id)
);
CREATE TABLE Calif.tbActividadesXcursoXgeneracion(
	Activ_Id INT NOT NULL,
	CuGen_Id INT NOT NULL,
	AcCur_Nota NUMERIC(4,2) NOT NULL,
	CONSTRAINT PK_tbActividadesXcursoXgeneracion_Activ_Id_CuGen_Id PRIMARY KEY(Activ_Id, CuGen_Id),
	CONSTRAINT FK_tbActividadesXcursoXgeneracion_tbActividades_Activ_Id FOREIGN KEY(Activ_Id) REFERENCES Calif.tbActividades(Activ_Id),
	CONSTRAINT FK_tbActividadesXcursoXgeneracion_tbCursosXgeneracion_CuGen_Id FOREIGN KEY(CuGen_Id) REFERENCES Acade.tbCursosXgeneracion(CuGen_Id)
);
CREATE TABLE Acade.tbInstructores(
	Instr_Id INT IDENTITY,
	Instr_Nombre VARCHAR(30) UNIQUE NOT NULL,
	CONSTRAINT PK_tbInstructores_Instr_Id PRIMARY KEY(Instr_Id)
);
CREATE TABLE Acade.tbInstructoresXcursoXgeneracion(
	Instr_Id INT NOT NULL,
	CuGen_Id INT NOT NULL,
	CONSTRAINT PK_tbInstructoresXcurso_Curso_Id_Gener_Id PRIMARY KEY(CuGen_Id, Instr_Id),
	CONSTRAINT FK_tbInstructoresXcurso_tbInstructores_Instr_Id FOREIGN KEY(Instr_Id) REFERENCES Acade.tbInstructores(Instr_Id),
	CONSTRAINT FK_tbInstructoresXcurso_tbCursosXgeneracion_CuGen_Id FOREIGN KEY(CuGen_Id) REFERENCES Acade.tbCursosXgeneracion(CuGen_Id)
);
CREATE TABLE Acade.tbAlumnos(
	Alumn_Id INT IDENTITY,
	Alumn_Nombre VARCHAR(30) UNIQUE NOT NULL,
	Alumn_MotivoDesercion VARCHAR(30),
	Gener_Id INT NOT NULL,
	CONSTRAINT PK_tbAlumnos_Alumn_Id PRIMARY KEY(Alumn_Id),
	CONSTRAINT FK_tbAlumnos_tbGeneraciones_Gener_Id FOREIGN KEY(Gener_Id) REFERENCES Acade.tbGeneraciones(Gener_Id)
);
CREATE TABLE Calif.tbCalificaciones(
	Calif_Id INT IDENTITY,
	CuGen_Id INT NOT NULL,
	Alumn_Id INT NOT NULL,
	Calif_Nota NUMERIC(4,2),
	CONSTRAINT PK_tbCalificaciones_Calif_Id PRIMARY KEY(Calif_Id),
	CONSTRAINT FK_tbCalificaciones_tbCursosXgeneracion_CuGen_Id FOREIGN KEY(CuGen_Id) REFERENCES Acade.tbCursosXgeneracion(CuGen_Id),
	CONSTRAINT FK_tbCalificaciones_tbAlumnos_Alumn_Id FOREIGN KEY(Alumn_Id) REFERENCES Acade.tbAlumnos(Alumn_Id)
);
GO
ALTER PROCEDURE [dbo].[SP_tbCalificaciones_SeleccionarXcurso](
	@Gener_Id INT
)
AS
BEGIN
	SELECT 
		tbAlumnos.Alumn_Nombre AS ALUMNO,
		tbCalificaciones.Calif_Nota AS NOTA,
		tbCursos.Curso_Nombre AS CURSO,
		tbActividadesXcursoXgeneracion.AcCur_Nota AS NOTA_ACTIVIDAD,
		tbGeneraciones.Gener_Nombre AS GENERACION
	FROM Calif.tbCalificaciones AS tbCalificaciones INNER JOIN Acade.tbAlumnos AS tbAlumnos
		ON tbCalificaciones.Alumn_Id = tbAlumnos.Alumn_Id INNER JOIN Acade.tbCursosXgeneracion AS tbCursosXgeneracion
		ON tbCalificaciones.CuGen_Id = tbCursosXgeneracion.CuGen_Id INNER JOIN Acade.tbCursos AS tbCursos
		ON tbCursosXgeneracion.Curso_Id = tbCursos.Curso_Id INNER JOIN Acade.tbGeneraciones AS tbGeneraciones
		ON tbCursosXgeneracion.Gener_Id = tbGeneraciones.Gener_Id INNER JOIN Calif.tbActividadesXcursoXgeneracion AS tbActividadesXcursoXgeneracion
		ON tbCalificaciones.CuGen_Id = tbActividadesXcursoXgeneracion.CuGen_Id INNER JOIN Calif.tbActividades AS tbActividades
		ON tbActividadesXcursoXgeneracion.Activ_Id = tbActividades.Activ_Id
	WHERE tbCursosXgeneracion.Gener_Id = @Gener_Id
END