<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// "form-control" attribute is only supported for all EditorFor() in System.Web.Mvc 5.1.0.0 or later versions, except for checkbox, which uses a div in Bootstrap
string boolType = "System.Boolean";
Version requiredMvcVersion = new Version("5.1.0.0");
bool isControlHtmlAttributesSupported = MvcVersion >= requiredMvcVersion;
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = $"<#= ViewDataTypeShortName #>".Substring(2);
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<#
if (ReferenceScriptLibraries) {
#>
<#
    if (!IsLayoutPageSelected && IsBundleConfigPresent) {
#>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<#
    }
#>
<#
    else if (!IsLayoutPageSelected) {
#>
<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<#
    }
#>

<#
}
#>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <section class="content">

<div class="card">
<div class="card-header">
<h3 class="card-title">@ViewBag.Title</h3>
<div class="card-tools">
<button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
<i class="fa fa-minus"></i>
</button>
<button type="button" class="btn btn-tool" data-card-widget="remove" title="Remove">
<i class="fa fa-times"></i>
</button>
</div>
</div>
<# 
    if (isControlHtmlAttributesSupported) {
#>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<#        
    } else {
#>
        @Html.ValidationSummary(true)
<#      
    }
#>
<div class="card-body form-row ">
<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly && !property.IsAssociation) {

        // If the property is a primary key and Guid, then the Guid is generated in the controller. Hence, this propery is not displayed on the view.
        if (property.IsPrimaryKey && IsPropertyGuid(property)) {
            continue;
        }

#>      
            <div class="col-sm-6 mb-2">
    <#
            if (property.IsForeignKey) {
    #>
                @Html.LabelFor(model => model.<#= property.PropertyName #>, "<#= GetAssociationName(property) #>")
    <#
            } else {
    #>
                @Html.LabelFor(model => model.<#= property.PropertyName #>)
    <#
            }
    #>
                <div >
    <#
            bool isCheckbox = property.TypeName.Equals(boolType);
            if (property.IsForeignKey) {
    #>
    <# 
                if (isControlHtmlAttributesSupported) {
    #>
                    @Html.DropDownList("<#= property.PropertyName #>", null, htmlAttributes: new { @class = "form-control" })
    <#
                } else {
    #>
                    @Html.DropDownList("<#= property.PropertyName #>", String.Empty)
    <#
                }
    #>
    <#
            } else  if (isControlHtmlAttributesSupported) {
                if (isCheckbox) {
    #>
                    <div class="checkbox">
    <#
                    PushIndent("    ");
    #>
                    @Html.EditorFor(model => model.<#= property.PropertyName #>)
    <#
                } else if (property.IsEnum && !property.IsEnumFlags) {
    #>
                    @Html.EnumDropDownListFor(model => model.<#= property.PropertyName #>, htmlAttributes: new { @class = "form-control" })
    <#
                } else {
    #>
                    @Html.EditorFor(model => model.<#= property.PropertyName #>, new { htmlAttributes = new { @class = "form-control" } })
    <#
                } 
            } else {
    #>
                    @Html.EditorFor(model => model.<#= property.PropertyName #>)
    <#
            }
    #>
    <# 
            if (isControlHtmlAttributesSupported) {
    #>
                    @Html.ValidationMessageFor(model => model.<#= property.PropertyName #>, "", new { @class = "text-danger" })
    <#        
            } else {
    #>
                    @Html.ValidationMessageFor(model => model.<#= property.PropertyName #>)
    <#      
            }
    #>
    <#
            if (isCheckbox && isControlHtmlAttributesSupported) {
                PopIndent();
    #>
                    </div>
    <#
            }
    #>
                </div>
            </div>
      
        

<#

    }

}
#>
  </div>
  <div class="card-footer">
    <div class="form-group form-row justify-content-center">
            <div class="col-sm-2">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
            <a class="btn btn-blue col-sm-1" href="@Url.Action("Index")">
                <i class="fa fa-arrow-circle-o-left"></i>
            </a>
        </div>
</div>
        
    </div>
    </section>
}


<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>

<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<#
}
#>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>