<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// "form-control" attribute is only supported for all EditorFor() in System.Web.Mvc 5.1.0.0 or later versions, except for checkbox, which uses a div in Bootstrap
string boolType = "System.Boolean";
Version requiredMvcVersion = new Version("5.1.0.0");
bool isControlHtmlAttributesSupported = MvcVersion >= requiredMvcVersion;
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>
    @{
            ViewBag.Title = $"<#= ViewDataTypeShortName #>".Substring(2);
    }
<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = $"<#= ViewDataTypeShortName #>".Substring(2);
    ViewBag.Title = ViewBag.Title.Substring(0, ViewBag.Title.Length - 1);
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}


<#
} else {
#>

@{
    Layout = null;
}

<#
    PushIndent("    ");
}
#>
<#
if (ReferenceScriptLibraries) {
#>
<#
    if (!IsLayoutPageSelected && IsBundleConfigPresent) {
#>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<#
    }
#>
<#
    else if (!IsLayoutPageSelected) {
#>
<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<#
    }
#>

<#
}
#>

@using (Html.BeginForm("Edit",(string)ViewBag.Title@*, FormMethod.Post, new { @id = "formEditar", @name = "formEditar" }*@))
{
    @Html.AntiForgeryToken()
               <div class="modal-body form-row justify-content-center">

<# 
    if (isControlHtmlAttributesSupported) {
#>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<#        
    } else {
#>
        @Html.ValidationSummary(true)
<#      
    }
#>


<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {

    if (property.Scaffold && !property.IsAssociation) {
        if(!GetValueExpression(property).EndsWith("FechaCreacion") &&
                    !GetValueExpression(property).EndsWith("FechaModificacion") &&
                    !GetValueExpression(property).EndsWith("Estado") && 
                    !GetValueExpression(property).EndsWith("tbUsuarios.Usuar_Usuario") &&
                    !GetValueExpression(property).EndsWith("tbUsuarios1.Usuar_Usuario") &&
                    !GetValueExpression(property).EndsWith("tbUsuarios2.Usuar_Usuario") &&
                    !GetValueExpression(property).EndsWith("tbUsuarios3.Usuar_Usuario") &&
                    !GetValueExpression(property).EndsWith("UsuarioCreacion") &&
                    !GetValueExpression(property).EndsWith("FechaCreacion") && 
                    !GetValueExpression(property).EndsWith("UsuarioModificacion") &&
                    !GetValueExpression(property).EndsWith("FechaModificacion")){
            if (property.IsPrimaryKey) {
#>
            @Html.HiddenFor(model => model.<#= property.PropertyName #>)

<#
            } else if (!property.IsReadOnly) {
#>
            <div class="col-sm-6 mb-2">

<#
                if (property.IsForeignKey) {
#>
                @Html.LabelFor(model => model.<#= property.PropertyName #>, new { @class = "text-primary w-100 text-left" })
<#
                } else {
#>
                @Html.LabelFor(model => model.<#= property.PropertyName #>, new { @class = "text-primary w-100 text-left" })
<#
                }
#>
                <div>
<#
                bool isCheckbox = property.TypeName.Equals(boolType);
                if (property.IsForeignKey) {
#>
<# 
                if (isControlHtmlAttributesSupported) {
#>
                    @Html.DropDownList("<#= property.PropertyName #>", null, htmlAttributes: new { @class = "form-control" })
<#
                } else {
#>
                    @Html.DropDownList("<#= property.PropertyName #>", String.Empty)
<#
                }
#>
<#
                } else  if (isControlHtmlAttributesSupported) {
                    if (isCheckbox) {
#>
                    <div class="checkbox">
<#
                        PushIndent("    ");
#>
                    @Html.EditorFor(model => model.<#= property.PropertyName #>)
<#
                    } else if (property.IsEnum && !property.IsEnumFlags) {
#>
                    @Html.EnumDropDownListFor(model => model.<#= property.PropertyName #>, htmlAttributes: new { @class = "form-control" })
<#
                    } else {
#>
                    @Html.EditorFor(model => model.<#= property.PropertyName #>, new { htmlAttributes = new { @class = "form-control" } })
<#
                    }
                } else {
#>
                    @Html.EditorFor(model => model.<#= property.PropertyName #>)
<#
                }
#>
<# 
                if (isControlHtmlAttributesSupported) {
#>
                    @Html.ValidationMessageFor(model => model.<#= property.PropertyName #>, "", new { @class = "text-danger" })
<#        
                } else {
#>
                    @Html.ValidationMessageFor(model => model.<#= property.PropertyName #>)
<#      
                }
#>
<#
                if (isCheckbox && isControlHtmlAttributesSupported) {
                    PopIndent();
#>
                    </div>
<#
                }
#>
                </div>
                </div>
            
<#
           }
        }
    }

}          
#>

       </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary" ><i class="fa fa-save"></i> Guardar</button>
                <button type="button" class="btn btn-primary btn-outline" data-dismiss="modal">
                    <i class="fa fa-times"></i> Cancelar
                </button>
            </div>
            <script>
        @*var my_func = function (event) {
                    if ($('#Munic_Id2').val() == "") {
                        event.preventDefault();
                    }
                };
                var form = document.getElementById("formEditar");

                form.addEventListener("submit", my_func, true);*@

        document.querySelectorAll('.col-sm-6.mb-2').forEach(grupo => {
            grupo.children[1].children[0].addEventListener('focus', () => {
                grupo.children[0].classList.add('text-secondary')
            })
            grupo.children[1].children[0].addEventListener('blur', () => {
                grupo.children[0].classList.remove('text-secondary')
            })
        })
    </script>
  
}
<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>

<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<#
}
#>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>