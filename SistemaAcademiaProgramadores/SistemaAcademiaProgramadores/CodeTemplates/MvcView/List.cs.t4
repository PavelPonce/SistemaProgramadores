<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = $"<#= ViewDataTypeShortName #>".Substring(2);
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h1 class="text-primary" style="font-size: 1.8rem;">@ViewBag.Title</h1>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            <a href='@Url.Action("Index", "Home")' class="btn btn-primary"><i class="glyphicon glyphicon-home"></i> Inicio</a>
        </div>
    </div>
</div>
<section class="content">

<div class="card">
<div class="card-body">
    <div class="text-left w-100 mb-4">
        @*<button class="btnNuevo btn btn-primary btn-outline">
            <i class="fa fa-plus-square-o"> </i> Nuevo
        </button>*@
        <a href="@Url.Action("Create")" class="btn btn-primary btn-outline">
            <i class="fa fa-plus-square-o"> </i> Nuevo
        </a>
    </div>

    <div class="w-100" style="overflow-x:scroll;">
        <table class="table table-striped table-bordered dataTables-example">
        <thead>
            <tr class="thead-purple thead-justify-content-center">
        <#
        IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
        foreach (PropertyMetadata property in properties) {
            if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
        #>
        <#
                // We do not want to show any association properties for which there is
                // no associated foreign key.
                if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
                    continue;
                }
                if(!GetValueExpression(property).EndsWith("FechaCreacion") &&
                    !GetValueExpression(property).EndsWith("FechaModificacion") &&
                    !GetValueExpression(property).EndsWith("Estado") && 
                    !GetValueExpression(property).EndsWith("tbUsuarios.Usuar_Usuario") &&
                    !GetValueExpression(property).EndsWith("tbUsuarios1.Usuar_Usuario") &&
                    !GetValueExpression(property).EndsWith("tbUsuarios2.Usuar_Usuario") &&
                    !GetValueExpression(property).EndsWith("tbUsuarios3.Usuar_Usuario")){
        #>
                <th class="bg-primary">
                    @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
                </th>
        <#
                }
            }
        }
        #>            
                <th class="bg-primary" style="max-width: 50px;">Acciones</th>
           
            </tr>
            </thead>
            <tbody>
        @foreach (var item in Model) {
            <tr>
        <#
        foreach (PropertyMetadata property in properties) {
            if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
        #>
        <#
                // We do not want to show any association properties for which there is
                // no associated foreign key.
                if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
                    continue;
                }
                 if(!GetValueExpression(property).EndsWith("FechaCreacion") &&
                    !GetValueExpression(property).EndsWith("FechaModificacion") &&
                    !GetValueExpression(property).EndsWith("Estado") && 
                    !GetValueExpression(property).EndsWith("tbUsuarios.Usuar_Usuario") &&
                    !GetValueExpression(property).EndsWith("tbUsuarios1.Usuar_Usuario") &&
                    !GetValueExpression(property).EndsWith("tbUsuarios2.Usuar_Usuario") &&
                    !GetValueExpression(property).EndsWith("tbUsuarios3.Usuar_Usuario")){
        #>
                <td>
                    @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
                </td>
        <#
                }
            }
        }

        string pkName = GetPrimaryKeyName();
        if (pkName != null) {
        #>
                <td>
                    <div class="d-flex justify-content-center align-items-center form-group mx-2" style="gap: 10px;">
                        @*<button data-id="@item.ID" class="btnEditar btn btn-warning btn-outline btn-xs col-sm-3">
                            <i class="fa fa-edit (alias)"></i>
                            Editar
                        </button>*@
                        <a class="btn btn-warning btn-outline btn-xs col-sm-3" href="@Url.Action("Edit", new { id=item.<#= pkName #> })">
                            <i class="fa fa-edit (alias)"></i>
                            Editar
                        </a>
                         <a class="btn btn-info btn-outline btn-xs col-sm-3" href="@Url.Action("Details", new { id=item.<#= pkName #> })" >
                            <i class="fa fa-eye"></i>
                            Detalles
                        </a>
                        @*<button data-id="@item.ID" class="btnEliminar btn btn-danger btn-outline btn-xs col-sm-3">
                            <i class="fa fa-trash-o"></i>
                            Eliminar
                        </button>*@
                        <a class="btn btn-danger btn-outline btn-xs col-sm-3" href="@Url.Action("Delete", new { id=item.<#= pkName #> })">
                            <i class="fa fa-trash-o"></i>
                            Eliminar
                        </a>
                    </div>
                </td>
           
        <#
        } else {
        #>
                <td>
                    <div class="d-flex justify-content-around align-items-center form-group mx-2" style="gap: 10px;"">
                        @*<button data-id="@item.ID" class="btnEditar btn btn-warning btn-outline btn-xs col-sm-3">
                            <i class="fa fa-edit (alias)"></i>
                            Editar
                        </button>*@
                        <a class="btn btn-warning btn-outline btn-xs col-sm-3" href="@Url.Action("Edit")" id="item.PrimaryKey">
                            <i class="fa fa-edit (alias)"></i>
                            Editar
                        </a>
                         <a class="btn btn-info btn-outline btn-xs col-sm-3" href="@Url.Action("Details")" id="item.PrimaryKey">
                            <i class="fa fa-eye"></i>
                            Detalles
                        </a>
                        @*<button data-id="@item.ID" class="btnEliminar btn btn-danger btn-outline btn-xs col-sm-4">
                            <i class="fa fa-trash-o"></i>
                            Eliminar
                        </button>*@
                        <a class="btn btn-danger btn-outline btn-xs col-sm-3" href="@Url.Action("Delete")" id="item.PrimaryKey">
                            <i class="fa fa-trash-o"></i>
                            Eliminar
                        </a>
                    </div>
                </td>
           
        <#
        }
        #>
            </tr>
        }
        </tbody>
        </table>
    </div>    
</div>

</div>

</section>

@Scripts.Render("~/Content/HTML5_Full_Version/js/jquery-3.1.1.min.js")

<script>
    
    @*$('.btnEditar').click(function () {
        var id = $(this).data("id");

        $.ajax({
            url: "/Home/llenarInputs",
            method: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({id : id, spLlenarEditar : '<#= ViewDataTypeShortName #>'}),

            success: function (data) {
                console.log(data);
                $.each(data, function (key, value) {
                <#
                    foreach (PropertyMetadata property in ModelMetadata.Properties) {

                        if (property.Scaffold && !property.IsAssociation) {
                            if(!GetValueExpression(property).EndsWith("FechaCreacion") &&
                                    !GetValueExpression(property).EndsWith("FechaModificacion") &&
                                    !GetValueExpression(property).EndsWith("Estado") && 
                                    !GetValueExpression(property).EndsWith("tbUsuarios.Usuar_Usuario") &&
                                    !GetValueExpression(property).EndsWith("tbUsuarios1.Usuar_Usuario") &&
                                    !GetValueExpression(property).EndsWith("tbUsuarios2.Usuar_Usuario") &&
                                    !GetValueExpression(property).EndsWith("tbUsuarios3.Usuar_Usuario") &&
                                    !GetValueExpression(property).EndsWith("UsuarioCreacion") &&
                                    !GetValueExpression(property).EndsWith("FechaCreacion") && 
                                    !GetValueExpression(property).EndsWith("UsuarioModificacion") &&
                                    !GetValueExpression(property).EndsWith("FechaModificacion")){
                #>
                    $('#<#= property.PropertyName #>').val(value.<#= property.PropertyName #>)
                <#
                            }
                        }
                    }
                #>
                })
                   
            },
            
        })

        $('#modalEditar').modal('show');
    })*@
    @*

    $('.btnNuevo').click(function(){
        $('#modalNuevo').modal('show');
    })
    *@
</script>

@*<div class="modal" id="modalNuevo" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @Html.Partial("_Create", new SistemaAcademiaProgramadores.Models.tbUsuarios())
        </div>
    </div>
</div>*@
@*<div class="modal" id="modalEditar" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Editar @ViewBag.Title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @Html.Partial("_Edit", new SistemaAcademiaProgramadores.Models.<#= ViewDataTypeShortName #>())
        </div>
    </div>
</div>*@


<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>

  

</body>

</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>